{"name":"Payoneer","tagline":"PHP wrapper for Payoneer API","body":"# Payoneer PHP SDK\r\n\r\nA unofficial PHP wrapper for Payoneer API\r\n\r\n## Supported functions\r\n\r\n#### Get signup link\r\n\r\n> The token is unique and is generated by Payoneer specifically for each sign-up session.\r\n\r\n```\r\npublic function getToken(request\\PayeeSignupRequest $request) {}\r\n```\r\n\r\n#### Get signup link with auto fill data\r\n\r\n> The token is unique and is generated by Payoneer specifically for each sign-up session.\r\n\r\n```\r\npublic function getTokenXML(request\\PayeeSignupAutoPopulationRequest $request) {}\r\n```\r\n\r\n#### Get API status\r\n\r\n> This method provides the status of the API and payout\r\n\r\n```\r\npublic function getApiStatus() {}\r\n```\r\n\r\n#### Get API version\r\n\r\n> This method provides the API version.\r\n\r\n```\r\npublic function getVersion() {}\r\n```\r\n\r\n#### Perform payout payment\r\n\r\n> This method, if successful, creates a payment request in the Payoneer system. Prior to issuing payment\r\n> instructions, the partner’s account balance in the Payoneer system must be credited relative to the\r\n> payment request. Payout instruction submission will fail if the partner’s account balance does not have\r\n> sufficient funds to perform the account loads. In addition the payee ID must be active.\r\n\r\n```\r\npublic function performPayoutPayment(request\\PerformPayoutPaymentRequest $request) {}\r\n```\r\n\r\n#### Get payment status\r\n\r\n> This method, if successful, reports the status of a payment that was earlier sent to the Payoneer system.\r\n\r\n```\r\npublic function getPaymentStatus($payeeId, $paymentId) {}\r\n```\r\n\r\n#### Get account details\r\n\r\n> This method returns the partner’s available account balance.\r\n\r\n```\r\npublic function getAccountDetails() {}\r\n```\r\n\r\n#### Get payee details\r\n    \r\n> This method returns details about the requested payee and his status at Payoneer.\r\n\r\n```\r\npublic function getPayeeDetails($payeeId) {}\r\n```\r\n\r\n#### Change payee id\r\n\r\n> This method changes the ID of an existing payee (old) to a new one.\r\n\r\n```\r\npublic function changePayeeId($oldId, $newId) {}\r\n```\r\n\r\n#### Get payees report\r\n    /**\r\n> This method returns all payments made to payees, grouped by payment method.\r\n\r\n```\r\npublic function getPayeesReport($startDate, $endDate) {}\r\n```\r\n\r\n#### Get single payee report\r\n\r\n> This method returns all payments made to a single payee.\r\n\r\n```\r\npublic function getSinglePayeeReport($payeeId) {}\r\n```\r\n\r\n#### Get unclaimed payments\r\n\r\n> This method returns an array of all payments that have not yet been claimed.\r\n\r\n```\r\npublic function getUnclaimedPayments() {}\r\n```\r\n\r\n#### Get unclaimed payments csv\r\n\r\n> This method returns a CSV string of all payments that have not yet been claimed.\r\n\r\n```\r\npublic function getUnclaimedPaymentsCSV() {}\r\n```\r\n\r\n#### Move payee program\r\n\r\n> This method returns a CSV string of all payments that have not yet been claimed.\r\n\r\n```\r\npublic function movePayeeProgram() {}\r\n```\r\n\r\n#### Cancel a payment\r\n\r\n> This method cancels a payment that has not yet been processed and loaded to an account.\r\n\r\n```\r\npublic function cancelPayment($paymentId) {}\r\n```\r\n\r\n#### ICPN Callback\r\n\r\nYou must create your own ICPN code (see PayoneerPayouts_IntegrationGuide2.49.pdf) and setup ICPN callback link in your Payoneer partner admin panel.\r\n\r\n\r\n##  Authors and Contributors\r\n\r\nMake with love to Payoneer\r\n\r\nIn 2016, PhuHM ([@hmphu][1]), [http://hmphu.com][2]\r\n\r\n##  Support or Contact\r\n\r\nHaving trouble? [contact me][3]\r\n\r\n[1]: https://github.com/hmphu\r\n[2]: http://www.hnphu.com\r\n[3]: mailto:me@hmphu.com","google":"UA-72252727-1","note":"Don't delete this file! It's used internally to help with page regeneration."}